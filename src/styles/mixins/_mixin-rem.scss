
// # Typography: REM calculator output

// ## Define base REM font size
$rem-base: $font__size-base;

// ## Strip REM
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// ## Convert to REM
@function convert-to-rem($value, $base-value: $rem-base) {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;

  // scss-lint:disable ZeroUnit
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  // scss-lint:enable ZeroUnit

  @return $value;
}

// ## Calculate REM
@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);
  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }
  $rem-values: ();
  @for $i from 1 through $max {
    $rem-values: append($rem-values, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $rem-values;
}

// ## Build mixin for transforming px values to REM
@mixin rem-from-px($property, $value) {
  $px-value: $value;
  $rem-value: rem-calc($value);

  #{$property}: $px-value;
  #{$property}: $rem-value;
}
